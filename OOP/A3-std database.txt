PROBLEM : Develop an object oriented program in C++ to create a database of student information
system containing the following information: Name, Roll number, Class, division, Date of
Birth, Blood group, Contact address, telephone number, driving license no. and other.
Construct the database with suitable member functions for initializing and destroying the
data viz constructor, default constructor, Copy constructor, destructor, static member
functions, friend class, this pointer, inline code and dynamic memory allocation
operators-new and delete.

CODE : 

#include<iostream>			
#include<string.h>	
using namespace std;			
#define max 200;
class pinfo
{

    string lic, dob, bg;    
    public:
    pinfo();                 
    pinfo(pinfo &);       
    ~pinfo()                 
    {
          cout<<"\nDestructor is called";
    }
    friend class student;                    
};
class student  
{
    string name, add, year;				
    char div;
    int roll_no;
    long mob;
    static int cnt; 						
    public:
    void create(pinfo &);				
    void display(pinfo &);			
 
    inline static void inccnt()               
 
    {
      cnt++;
    }
    inline static void showcnt()               
                                      
    {
      cout<<"\nTotal number of records are: "<<cnt;
    }
    student();                           
    student(student &);                 
    ~student()                         
    {
       cout<<"\nDestructor called";
    }
};
 
int student::cnt;              
student::student()    
{
        name="Rahul Sawant";
        add="Bluegrass society,near shastrinagar,Pune";
        year="SE Computer";
        div='A';
        roll_no=1487;
        mob=9985475661;
}
pinfo::pinfo()    
{
       lic="BX402161";
       dob="01/01/1951";
       bg="A+";
}
student::student(student &obj)	
{
      this->name=obj.name;			 
      this->add=obj.add;	//this-> can be written as name
      this->year=obj.year;
      this->div=obj.div;
      this->roll_no=obj.roll_no;
      this->mob=obj.mob;
}
pinfo::pinfo(pinfo &obj)		
{
     lic=obj.lic;
     dob=obj.dob;
     bg=obj.bg;
}
//TO CREATE THE DATABASE
void student::create(pinfo &obj)
{
cout<<"\nNAME : ";
cin>>name;
cout<<"\nADDRESS : ";
cin>>add;
cout<<"\nDATE OF BIRTH : ";
cin>>obj.dob;
cout<<"\nYEAR : ";
cin>>year;
cout<<"\nDIVISION: ";
cin>>div;
cout<<"\nROLL NUMBER : ";
cin>>roll_no;
cout<<"\nBLOOD GROUP : ";
cin>>obj.bg;
cout<<"\nLICEINCE NUMBER : ";
cin>>obj.lic;
cout<<"\nPHONE NUMBER : ";
cin>>mob;
}
 
//TO DISPLAY DATABASE
void student::display(pinfo &obj)
{
cout<<"\n----------------------";
cout<<"\nNAME OF STUDENT : "<<name;
cout<<"\nADDRESS OF STUDENT : "<<add;
cout<<"\nDATE OF BIRTH : "<<obj.dob;
cout<<"\nYEAR : "<<year;
cout<<"\nDIVISION : "<<div;
cout<<"\nROLL NO : "<<roll_no;
cout<<"\nBLOOD GROUP : "<<obj.bg;
cout<<"\nLICEINCE NUMBER : "<<obj.lic;
cout<<"\nPHONE NUMBER : "<<mob;
cout<<"\n-----------------------";
}
int main()
{
 int n;				
 int ch;
 char ans;
 
 cout<<"\nENTER NO OF STUDENTS :";
 cin>>n;
 cout<<"\n--------------------------";
 student *sobj=new student[n];				
 pinfo *pobj=new pinfo[n];		
 
 do
 {
	 cout<<"\n Menu \n 1. Create Database \n 2. Display Databse \n 3. Copy Constructor\n 4. Default Constructor \n 5. Delete";
	 cout<<"\n Enter your Choice: ";
	 cin>>ch;
	 switch(ch)
	 {
	 case 1: // create database
	 {
		 for(int i=0;i<n;i++)
		 {
		       sobj[i].create(pobj[i]);
		       sobj[i].inccnt();
 
		 }
	 }
		break;
 	 case 2: // Display Database
  		{
			sobj[0].showcnt(); 	
			 for(int i=0;i<n;i++)
			 {
				 sobj[i].display(pobj[i]);
			 }
    	 }
    	 break;
	  case 3: // Copy Constructor
		{
			 student obj1;
			 pinfo obj2;
			 obj1.create(obj2);
			 student obj3(obj1);		
 
			 pinfo obj4(obj2);		 
			 cout<<"\n Copy Constructor";
			 obj3.display(obj4);
 		}
        break;
	 case 4: // Default Constructor
 		{
			 student obj1;	
			 pinfo obj2;	
			 cout<<"\n Default Constructor called ";
			 obj1.display(obj2);
 		}
 		break;
	 case 5: // destructor is called
 
			 delete [] sobj;			
 		     delete [] pobj;		
 	}				
 	cout<<"\ncontinue:(y/n)"	     ;
 	cin>>ans;
  }
  while(ans=='y') 	;
 
 
 return 0;
}